name: 🤖 Agents Control Plane
# **Automated monitoring and control of AI agents**

on:
  schedule:
    - cron: '0 9 * * *'  # Щоденно о 9:00
  workflow_dispatch:
  pull_request:
    types: [opened, closed]

jobs:
  agents-monitoring:
    runs-on: ubuntu-latest
    permissions:
      issues: read
      pull-requests: read
      contents: read
    steps:
      - name: 📋 Checkout Repository
        uses: actions/checkout@v4

      - name: 📊 Analyze Agent Activity
        id: analyze
        run: |
          echo "🤖 Analyzing AI Agent Activity..."

          # Count issues by agent
          COPILOT_ISSUES=$(gh issue list --label "ai:copilot" --state open --json number | jq length)
          CLAUDE_ISSUES=$(gh issue list --label "ai:claude" --state open --json number | jq length)
          CODEX_ISSUES=$(gh issue list --label "ai:codex" --state open --json number | jq length)
          GEMINI_ISSUES=$(gh issue list --label "ai:gemini" --state open --json number | jq length)

          # Count PRs by agent
          COPILOT_PRS=$(gh pr list --label "ai:copilot" --state open --json number | jq length)
          CLAUDE_PRS=$(gh pr list --label "ai:claude" --state open --json number | jq length)
          CODEX_PRS=$(gh pr list --label "ai:codex" --state open --json number | jq length)
          GEMINI_PRS=$(gh pr list --label "ai:gemini" --state open --json number | jq length)

          # Calculate total activity
          TOTAL_ISSUES=$((COPILOT_ISSUES + CLAUDE_ISSUES + CODEX_ISSUES + GEMINI_ISSUES))
          TOTAL_PRS=$((COPILOT_PRS + CLAUDE_PRS + CODEX_PRS + GEMINI_PRS))

          echo "copilot_issues=$COPILOT_ISSUES" >> $GITHUB_OUTPUT
          echo "claude_issues=$CLAUDE_ISSUES" >> $GITHUB_OUTPUT
          echo "codex_issues=$CODEX_ISSUES" >> $GITHUB_OUTPUT
          echo "gemini_issues=$GEMINI_ISSUES" >> $GITHUB_OUTPUT
          echo "copilot_prs=$COPILOT_PRS" >> $GITHUB_OUTPUT
          echo "claude_prs=$CLAUDE_PRS" >> $GITHUB_OUTPUT
          echo "codex_prs=$CODEX_PRS" >> $GITHUB_OUTPUT
          echo "gemini_prs=$GEMINI_PRS" >> $GITHUB_OUTPUT
          echo "total_issues=$TOTAL_ISSUES" >> $GITHUB_OUTPUT
          echo "total_prs=$TOTAL_PRS" >> $GITHUB_OUTPUT

          echo "✅ Analysis complete: $TOTAL_ISSUES issues, $TOTAL_PRS PRs"

      - name: 📈 Generate Agent Report
        id: report
        run: |
          echo "📊 Generating Agent Report..."

          # Create JSON report
          cat > agents-report.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "agents": {
              "copilot": {
                "name": "GitHub Copilot",
                "role": "Domain Developer",
                "issues": ${{ steps.analyze.outputs.copilot_issues }},
                "prs": ${{ steps.analyze.outputs.copilot_prs }},
                "status": "active"
              },
              "claude": {
                "name": "Claude",
                "role": "Full-Stack Developer",
                "issues": ${{ steps.analyze.outputs.claude_issues }},
                "prs": ${{ steps.analyze.outputs.claude_prs }},
                "status": "active"
              },
              "codex": {
                "name": "OpenAI Codex",
                "role": "Infrastructure Developer",
                "issues": ${{ steps.analyze.outputs.codex_issues }},
                "prs": ${{ steps.analyze.outputs.codex_prs }},
                "status": "active"
              },
              "gemini": {
                "name": "Google Gemini",
                "role": "QA Specialist",
                "issues": ${{ steps.analyze.outputs.gemini_issues }},
                "prs": ${{ steps.analyze.outputs.gemini_prs }},
                "status": "active"
              }
            },
            "summary": {
              "total_issues": ${{ steps.analyze.outputs.total_issues }},
              "total_prs": ${{ steps.analyze.outputs.total_prs }},
              "active_agents": 4,
              "system_health": "healthy"
            }
          }
          EOF

          echo "✅ Report generated"

      - name: 📝 Update Agent Log
        run: |
          echo "📝 Updating Agent Log..."

          # Ensure .ops directory exists
          mkdir -p .ops

          # Create/update agent log
          cat > .ops/agent-log.md << EOF
          # 🤖 Agent Activity Log

          **Last Updated:** $(date -u +%Y-%m-%dT%H:%M:%SZ)
          **Generated by:** GitHub Actions

          ## 📊 Current Status

          | Agent | Role | Issues | PRs | Status |
          |-------|------|--------|-----|--------|
          | GitHub Copilot | Domain Developer | ${{ steps.analyze.outputs.copilot_issues }} | ${{ steps.analyze.outputs.copilot_prs }} | 🟢 Active |
          | Claude | Full-Stack Developer | ${{ steps.analyze.outputs.claude_issues }} | ${{ steps.analyze.outputs.claude_prs }} | 🟢 Active |
          | OpenAI Codex | Infrastructure Developer | ${{ steps.analyze.outputs.codex_issues }} | ${{ steps.analyze.outputs.codex_prs }} | 🟢 Active |
          | Google Gemini | QA Specialist | ${{ steps.analyze.outputs.gemini_issues }} | ${{ steps.analyze.outputs.gemini_prs }} | 🟢 Active |

          ## 📈 Summary

          - **Total Active Issues:** ${{ steps.analyze.outputs.total_issues }}
          - **Total Active PRs:** ${{ steps.analyze.outputs.total_prs }}
          - **Active Agents:** 4/4
          - **System Health:** 🟢 Healthy

          ## 🔗 Quick Links

          - [All Issues](https://github.com/MixaJuba/QuantumForce_Code/issues)
          - [All PRs](https://github.com/MixaJuba/QuantumForce_Code/pulls)
          - [Project Board](https://github.com/MixaJuba/QuantumForce_Code/projects)
          - [Actions](https://github.com/MixaJuba/QuantumForce_Code/actions)

          ## 📋 Recent Activity

          Check the Issues and PRs for recent activity from each agent.

          EOF

          echo "✅ Agent log updated"

      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: agents-report
          path: |
            agents-report.json
            .ops/agent-log.md
          retention-days: 30

      - name: 📊 Job Summary
        run: |
          echo "## 🤖 Agents Control Plane Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Generated:** $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Agent Activity" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Agent | Issues | PRs | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| GitHub Copilot | ${{ steps.analyze.outputs.copilot_issues }} | ${{ steps.analyze.outputs.copilot_prs }} | 🟢 Active |" >> $GITHUB_STEP_SUMMARY
          echo "| Claude | ${{ steps.analyze.outputs.claude_issues }} | ${{ steps.analyze.outputs.claude_prs }} | 🟢 Active |" >> $GITHUB_STEP_SUMMARY
          echo "| OpenAI Codex | ${{ steps.analyze.outputs.codex_issues }} | ${{ steps.analyze.outputs.codex_prs }} | 🟢 Active |" >> $GITHUB_STEP_SUMMARY
          echo "| Google Gemini | ${{ steps.analyze.outputs.gemini_issues }} | ${{ steps.analyze.outputs.gemini_prs }} | 🟢 Active |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📈 Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Issues:** ${{ steps.analyze.outputs.total_issues }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Total PRs:** ${{ steps.analyze.outputs.total_prs }}" >> $GITHUB_STEP_SUMMARY
          echo "- **System Health:** 🟢 Healthy" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- [Agent Log](.ops/agent-log.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [Agents Registry](.ops/agents-registry.yaml)" >> $GITHUB_STEP_SUMMARY
          echo "- [Project Board](https://github.com/MixaJuba/QuantumForce_Code/projects)" >> $GITHUB_STEP_SUMMARY
